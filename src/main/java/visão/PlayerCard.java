/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visão;

import controle.*;
import java.awt.Point;
import javax.swing.JOptionPane;
import modelo.Jogador;
import personagem.TipoPersonagem;
import tabuleiro.Tabuleiro;

/**
 *
 * @author Gabriel
 */
public class PlayerCard extends javax.swing.JFrame {

    /**
     * Creates new form PlayerCardA
     */
    public PlayerCard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));
        jPanel1.setLayout(new java.awt.GridLayout(6, 2));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Clérigo");
        jPanel1.add(jLabel1);

        jTextField1.setBackground(new java.awt.Color(255, 255, 255));
        jTextField1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jPanel1.add(jTextField1);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Assassino");
        jPanel1.add(jLabel2);

        jTextField2.setBackground(new java.awt.Color(255, 255, 255));
        jTextField2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jPanel1.add(jTextField2);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Bardo");
        jPanel1.add(jLabel3);

        jTextField3.setBackground(new java.awt.Color(255, 255, 255));
        jTextField3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jPanel1.add(jTextField3);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Guerreiro");
        jPanel1.add(jLabel4);

        jTextField4.setBackground(new java.awt.Color(255, 255, 255));
        jTextField4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jPanel1.add(jTextField4);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Arqueiro");
        jPanel1.add(jLabel5);

        jTextField5.setBackground(new java.awt.Color(255, 255, 255));
        jTextField5.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jPanel1.add(jTextField5);

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Escolha 15 heróis            ");
        jPanel1.add(jLabel6);

        jButton1.setBackground(new java.awt.Color(51, 204, 0));
        jButton1.setForeground(new java.awt.Color(204, 0, 0));
        jButton1.setText("Confirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int x = 0;
        try {
            x += Integer.parseInt(jTextField1.getText());
            x += Integer.parseInt(jTextField2.getText());
            x += Integer.parseInt(jTextField3.getText());
            x += Integer.parseInt(jTextField4.getText());
            x += Integer.parseInt(jTextField5.getText());
            if (x > 15 || x == 0) {
                JOptionPane.showMessageDialog(this, "Insira de 1 até 15 heróis", "Erro!", JOptionPane.ERROR_MESSAGE);
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
                jTextField5.setText("");
                return;
            }
            posicionarAsPecas(Integer.parseInt(jTextField4.getText()),
                    Integer.parseInt(jTextField5.getText()),
                    Integer.parseInt(jTextField3.getText()),
                    Integer.parseInt(jTextField2.getText()),
                    Integer.parseInt(jTextField1.getText()));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Use números!", "Erro!", JOptionPane.ERROR_MESSAGE);
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            return;
        }
        if (Controle.getObject().isFirstDeployer()) {
            Controle.getObject().setFirstDeployer(false);
            PlayerCard cardA = new PlayerCard();
            cardA.setLocationRelativeTo(null);
            cardA.setResizable(false);
            cardA.setVisible(true);
        }
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void posicionarAsPecas(int qntGuer, int qntdArq, int qntdBard, int qntdAss, int qntdCler) {
        Jogador jogadorAtual = Controle.getObject().getJogadorDaVez();
        posicionarGuerreiros(qntGuer, jogadorAtual);
        posicionarArqueiros(qntdArq, jogadorAtual);
        posicionarBardo(qntdBard, jogadorAtual);
        posicionarAssassino(qntdAss, jogadorAtual);
        posicionarClerigo(qntdCler, jogadorAtual);
        Controle.getObject().passarTurno();
    }

    private void posicionarGuerreiros(int qntGuer, Jogador j) {
        int i = 0;
        while (i < qntGuer) {
            int x = Integer.parseInt(JOptionPane.showInputDialog("Coordenada x para seu " + (i + 1) + "º guerreiro"));
            int y = Integer.parseInt(JOptionPane.showInputDialog("Coordenada y para seu " + (i + 1) + "º guerreiro"));
            try {
                //j.inicializarPecas(new Point(x, y), new Guerreiro(30, 0, j, new Point(x, y)));
                Controle.getObject().selecionarPersonagem(TipoPersonagem.GUERREIRO, Tabuleiro.getObject().getTabuleiro()[x][y]);
                i++;
            } catch (OutOfBaseException ex) {
                JOptionPane.showMessageDialog(this, "coloque em até o ponto (n, 5) para jogador 1\n"
                        + "e até (n, 23) para jogador 2\n"
                        + "onde n pode ser qualquer um dos (0...27) pontos x", "Região errada", JOptionPane.INFORMATION_MESSAGE);
            } catch (OccupiedException ex) {
                JOptionPane.showMessageDialog(this, "Ponto já ocupado", "Região errada", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    private void posicionarArqueiros(int qntdArq, Jogador j) {
        int i = 0;
        while (i < qntdArq) {
            int x = Integer.parseInt(JOptionPane.showInputDialog("Coordenada x para seu " + (i + 1) + "º Arqueiro"));
            int y = Integer.parseInt(JOptionPane.showInputDialog("Coordenada y para seu " + (i + 1) + "º Arqueiro"));
            try {
                //j.inicializarPecas(new Point(x, y), new Arqueiro(5, 5, j, new Point(x, y)));
                Controle.getObject().selecionarPersonagem(TipoPersonagem.ARQUEIRO, Tabuleiro.getObject().getTabuleiro()[x][y]);
                i++;
            } catch (OutOfBaseException ex) {
                JOptionPane.showMessageDialog(this, "coloque em até o ponto (n, 5) para jogador 1\n"
                        + "e até (n, 23) para jogador 2\n"
                        + "onde n pode ser qualquer um dos (0...27) pontos x", "Região errada", JOptionPane.INFORMATION_MESSAGE);
            } catch (OccupiedException ex) {
                JOptionPane.showMessageDialog(this, "Ponto já ocupado", "Região errada", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    private void posicionarBardo(int qntdBard, Jogador j) {
        int i = 0;
        while (i < qntdBard) {
            int x = Integer.parseInt(JOptionPane.showInputDialog("Coordenada x para seu " + (i + 1) + "º Bardo"));
            int y = Integer.parseInt(JOptionPane.showInputDialog("Coordenada y para seu " + (i + 1) + "º Bardo"));
            try {
                //j.inicializarPecas(new Point(x, y), new Bardo(15, 2, j, new Point(x, y)));
                Controle.getObject().selecionarPersonagem(TipoPersonagem.BARDO, Tabuleiro.getObject().getTabuleiro()[x][y]);
                i++;
            } catch (OutOfBaseException ex) {
                JOptionPane.showMessageDialog(this, "coloque em até o ponto (n, 5) para jogador 1\n"
                        + "e até (n, 23) para jogador 2\n"
                        + "onde n pode ser qualquer um dos (0...27) pontos x", "Região errada", JOptionPane.INFORMATION_MESSAGE);
            } catch (OccupiedException ex) {
                JOptionPane.showMessageDialog(this, "Ponto já ocupado", "Região errada", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    private void posicionarClerigo(int qntdCler, Jogador j) {
        int i = 0;
        while (i < qntdCler) {
            int x = Integer.parseInt(JOptionPane.showInputDialog("Coordenada x para seu " + (i + 1) + "º Clerigo"));
            int y = Integer.parseInt(JOptionPane.showInputDialog("Coordenada y para seu " + (i + 1) + "º Clerigo"));
            try {
                //j.inicializarPecas(new Point(x, y), new Clerigo(7, 20, j, new Point(x, y)));
                Controle.getObject().selecionarPersonagem(TipoPersonagem.CLERIGO, Tabuleiro.getObject().getTabuleiro()[x][y]);
                i++;
            } catch (OutOfBaseException ex) {
                JOptionPane.showMessageDialog(this, "coloque em até o ponto (n, 5) para jogador 1\n"
                        + "e até (n, 23) para jogador 2\n"
                        + "onde n pode ser qualquer um dos (0...27) pontos x", "Região errada", JOptionPane.INFORMATION_MESSAGE);
            } catch (OccupiedException ex) {
                JOptionPane.showMessageDialog(this, "Ponto já ocupado", "Região errada", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    private void posicionarAssassino(int qntdAss, Jogador j) {
        int i = 0;
        while (i < qntdAss) {
            int x = Integer.parseInt(JOptionPane.showInputDialog("Coordenada x para seu " + (i + 1) + "º Assassino"));
            int y = Integer.parseInt(JOptionPane.showInputDialog("Coordenada y para seu " + (i + 1) + "º Assassino"));
            try {
                //j.inicializarPecas(new Point(x, y), new Assassino(7, 6, j, new Point(x, y)));
                Controle.getObject().selecionarPersonagem(TipoPersonagem.ASSASSINO, Tabuleiro.getObject().getTabuleiro()[x][y]);
                i++;
            } catch (OutOfBaseException ex) {
                JOptionPane.showMessageDialog(this, "coloque em até o ponto (n, 5) para jogador 1\n"
                        + "e até (n, 23) para jogador 2\n"
                        + "onde n pode ser qualquer um dos (0...27) pontos x", "Região errada", JOptionPane.INFORMATION_MESSAGE);
            } catch (OccupiedException ex) {
                JOptionPane.showMessageDialog(this, "Ponto já ocupado", "Região errada", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayerCard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables

}
